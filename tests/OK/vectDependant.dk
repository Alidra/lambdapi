Nat : Type.

0 : Nat.
S : Nat -> Nat.

def 1 : Nat.
def 2 : Nat.
def 3 : Nat.
def 4 : Nat.

[] 1 --> S 0.
[] 2 --> S 1.
[] 3 --> S 2.
[] 4 --> S 3.

Vec : Nat -> Type.

nil : Vec 0.
cns : n : Nat -> Vec n -> Vec (S n).

def tail : n:Nat -> Vec (S n) -> Vec n.
[n,l] tail n (cns _ l) --> l.

def S_bis : Nat -> Nat.
[]  S_bis 0         --> S (S 0).
[]  S_bis (S 0)     --> S (S 0).
[n] S_bis (S (S n)) --> S (S (S_bis n)).

cns_bis : n:Nat -> Vec n -> Vec (S_bis n).

def id_bis : n:Nat -> Vec (S_bis n) -> Vec (S_bis n).
[n,l] id_bis n (cns_bis n l) --> cns_bis n l.
