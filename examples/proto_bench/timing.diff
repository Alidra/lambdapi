diff --git a/src/dtree.ml b/src/dtree.ml
index c17ac46..958838c 100644
--- a/src/dtree.ml
+++ b/src/dtree.ml
@@ -7,6 +7,8 @@ open Extra
 open Basics
 open Treecons
 
+let ti_build_tree = ref 0.
+
 (** See {!type:tree} in {!module:Terms}. *)
 type t = tree
 
@@ -521,6 +523,7 @@ let fetch : Cm.component array -> int -> int IntMap.t -> action -> t =
     pattern matching problem contained in pattern matrix [m]. *)
 let compile : Cm.t -> t = fun patterns ->
   (* let varcount = ref 0 in *)
+  let _t = Unix.gettimeofday () in
   let rec compile patterns =
     let { Cm.var_catalogue = vcat ; _ } = patterns in
     if Cm.is_empty patterns then
@@ -576,4 +579,6 @@ let compile : Cm.t -> t = fun patterns ->
           if Cm.is_empty ncm then None else Some(compile ncm) in
         Node({ swap = absolute_cind ; store = store ; children = children
              ; default = defmat }) in
-  compile patterns
+  let r = compile patterns in
+  ti_build_tree := !ti_build_tree +. (Unix.gettimeofday () -. _t) ;
+  r
diff --git a/src/eval.ml b/src/eval.ml
index dd6675f..7127340 100644
--- a/src/eval.ml
+++ b/src/eval.ml
@@ -8,6 +8,9 @@ open Basics
 open Print
 open Treecons
 
+let ti_eval = Pervasives.ref 0.
+let ti_evb_tree = Pervasives.ref 0.
+
 (** The head-structure of a term t is:
 - λx:_,h if t=λx:a,u and h is the head-structure of u
 - ∀ if t=∀x:a,u
@@ -378,6 +381,19 @@ let rec snf : term -> term = fun t ->
   | Wild        -> assert false
   | TRef(_)     -> assert false
 
+let snf t =
+  Pervasives.(with_trees := true) ;
+  let _tsta = Unix.gettimeofday () in
+  let _ = snf t in
+  let _tsto = Unix.gettimeofday () in
+  Pervasives.(ti_evb_tree := !ti_evb_tree +. (_tsto -. _tsta)) ;
+  Pervasives.(with_trees := false) ;
+  let _tsta = Unix.gettimeofday () in
+  let u = snf t in
+  let _tsto = Unix.gettimeofday () in
+  Pervasives.(ti_eval := !ti_eval +. (_tsto -. _tsta)) ;
+  u
+
 (** [hnf t] computes a head-normal form of the term [t]. *)
 let rec hnf : term -> term = fun t ->
   match whnf t with
diff --git a/src/lambdapi.ml b/src/lambdapi.ml
index 897cb6f..9ea6c8e 100644
--- a/src/lambdapi.ml
+++ b/src/lambdapi.ml
@@ -5,6 +5,13 @@ open Extra
 open Files
 open Console
 
+;;
+at_exit (fun () ->
+  let real_tree_eval = (!(Eval.ti_evb_tree) -. !(Dtree.ti_build_tree)) in
+  let fmt = r_or_g (!(Eval.ti_eval) > real_tree_eval)
+    "(Tree eval/build)/vanilla: (%f/%f)/%f\n" in
+  Format.printf fmt real_tree_eval !(Dtree.ti_build_tree) !(Eval.ti_eval))
+
 (* NOTE only standard [Pervasives] references here. *)
 
 (** [confluence_checker] holds a possible confluence checking command. When it
