#NAME Syracuse.

NatBin : Type.

1 : NatBin.
x2 : NatBin -> NatBin.
x2plus1 : NatBin -> NatBin.

def 3 := x2plus1 1.

def plus : NatBin -> NatBin -> NatBin.
[]    plus 1           1           --> x2 1.
[y]   plus 1           (x2 y)      --> x2plus1 y.
[y]   plus 1           (x2plus1 y) --> x2 (plus 1 y).
[x]   plus (x2 x)      1           --> x2plus1 x.
[x,y] plus (x2 x)      (x2 y)      --> x2 (plus x y).
[x,y] plus (x2 x)      (x2plus1 y) --> x2plus1 (plus x y).
[x]   plus (x2plus1 x) 1           --> x2 (plus x 1).
[x,y] plus (x2plus1 x) (x2 y)      --> x2plus1 (plus x y).
[x,y] plus (x2plus1 x) (x2plus1 y) --> x2 (plus 1 (plus x y)).

def mult : NatBin -> NatBin -> NatBin.
[x]   mult x           1           --> x.
[y]   mult 1           y           --> y.
[x,y] mult (x2 x)      (x2 y)      --> x2 (x2 (mult x y)).
[x,y] mult (x2 x)      (x2plus1 y) --> plus (x2 x) (x2 (x2 (mult x y))).
[x,y] mult (x2plus1 x) (x2 y)      --> plus (x2 y) (x2 (x2 (mult x y))).
[x,y] mult (x2plus1 x) (x2plus1 y) --> plus (x2 (x2 (mult x y))) (plus (x2 x) (x2plus1 y)).

(;
#SNF mult (x2plus1 (x2plus1 1)) (x2plus1 (x2 1)).
(; ;)

def Syracuse : NatBin -> NatBin.
[]  Syracuse 1           --> 1.
[x] Syracuse (x2 x)      --> Syracuse x.
[x] Syracuse (x2plus1 x) --> Syracuse (plus 1 (mult 3 (x2plus1 x))).

(;
#SNF Syracuse (x2plus1 (x2plus1 (x2plus1 (x2plus1 (x2plus1 (x2plus1 (x2plus1 (x2 (x2 (x2plus1 (x2 (x2 (x2 (x2 (x2plus1 (x2 (x2plus1 1))))))))))))))))).
(; ;)