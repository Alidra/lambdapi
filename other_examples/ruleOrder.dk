#NAME RuleOrder.

Nat : Type.

0 : Nat.
S : Nat -> Nat.

def operation : Nat -> Nat -> Nat.
[]    operation 0     0     --> 0.
[x,y] operation (S x) y     --> S 0.
[x,y] operation x     (S y) --> S (S 0).

def operation2 : Nat -> Nat -> Nat.
[]    operation2 0     0     --> 0.
[x,y] operation2 x     (S y) --> S (S 0).
[x,y] operation2 (S x) y     --> S 0.

def operation3 : Nat -> Nat -> Nat.
[]      operation3 0           0     --> 0.
[x,y]   operation3 (S x)       y     --> S 0.
[x,y]   operation3 x           (S y) --> S (S 0).
[x,y,z] operation3 (operation3 x y) z     --> S (S (S 0)).

def operation4 : Nat -> Nat -> Nat.
[x,y,z] operation4 (operation4 x y) z     --> S (S (S 0)).
[]      operation4 0           0     --> 0.
[x,y]   operation4 (S x)       y     --> S 0.
[x,y]   operation4 x           (S y) --> S (S 0).

#EVAL operation (S 0) (S 0).
#EVAL operation2 (S 0) (S 0).
#EVAL operation3 (operation3 (S 0) (S 0)) (S 0).
#EVAL operation4 (operation4 (S 0) (S 0)) (S 0).

#EVAL[HNF] operation (S 0) (S 0).
#EVAL[HNF] operation2 (S 0) (S 0).
#EVAL[HNF] operation3 (operation3 (S 0) (S 0)) (S 0).
#EVAL[HNF] operation4 (operation4 (S 0) (S 0)) (S 0).

#EVAL[WHNF] operation (S 0) (S 0).
#EVAL[WHNF] operation2 (S 0) (S 0).
#EVAL[WHNF] operation3 (operation3 (S 0) (S 0)) (S 0).
#EVAL[WHNF] operation4 (operation4 (S 0) (S 0)) (S 0).
